pipeline {
    agent {
        label ''
    }
    stages {
        stage('git checkout'){
            steps{
                git credentialId: 'cred',
                url: 'https://gitlab.com/surendraasr4/techworld-js-docker-demo-app.git'
            }
        }
    stage('ApprovalForDev') {
        steps {
            script {
        }
    } 
        stage('Dev') {
            steps {
                script {
                    def CURRENT_ENV = 'DEV'
                    echo "${CURRENT_ENV}"
                }
            }
        }
    stage('ApprovalForQA') {
        steps {
            script {
                def deploymentDelay = input id: 'Deploy', message: 'Deploy to production?', submitter: 'admin,manager', parameters
                    sleep time: deploymentDelay.toInteger(), unit: 'HOURS'
            }
        }
    }
        stage('QA') {
            steps {
                script {
                    def CURRENT_ENV = "QA"
                    echo"${CURRENT_ENV}"
                }
            }
        }
    stage('ApprovalForUAT') {
        steps {
            script {
                def 'deploymentDelay = input id: 'Deploy', message: 'Deploy to production?', submitter: 'admin,manager', parameters
                     sleep time: deploymentDelay.toInteger(), unit: 'HOURS'
            }
        }
    }
    stage('UAT') {
            steps {
                script {
                    def CURRENT_ENV = "UAT"
                    echo"${CURRENT_ENV}"
                }
            }
        }
        stage('ApprovalForPROD') {
        steps {
            script {
                def 'deploymentDelay = input id: 'Deploy', message: 'Deploy to production?', submitter: 'admin,manager', parameters
                     sleep time: deploymentDelay.toInteger(), unit: 'HOURS'
            }
        }
    }                                         
        stage('PROD') {
            steps {
                script {
                    def CURRENT_ENV = "PROD"
                    echo"${CURRENT_ENV}"
                }
            }
        }
    }
    post {
        success {
            echo 'Job has been successfully built'
        }

        failure {
            echo 'Job has failed! Please check the job console!'
        }

    }
    
}
